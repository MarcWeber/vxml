Name:            vxml
category:        XML
synopsis:        library to write xml documents enforcing dtd validity by the haskell type system
                 idea based on WASH - unstable library, things will and must change
version:         0.0.1
Cabal-Version: >=1.2
build-type:      Simple
LICENSE: GPL

Flag WeakValidation
  Description: Don't check order or amount of subelements, only check that an element can be a subelement of another
               Currently this is the only usable setting for real projects.
               Validation is approximately as good as the one provided by WASH.
  Default: False
Flag PrintGeneratedCode
  Default: False
  Description: If set vxml will output the by template haskell generated code to stdout
Flag BuildTestSimple
  Default: True
  Description:
      wether to build the testSimple test
Flag BuildTestXHTML
  Default: False
  Description: 
      wether to build the testXHTMTL test
      you'll need the latest HaXML darcs version for this to work because only this will parse the XHTML-1.0 dtd
Flag BuildTestCases
  Default: False
  Description: 
      wether to build the executable running test cases
Flag BuildBenchpressTest
  Default: False
  Description: 
      wether to build the executable running a benchpress test on how fast ghc can comple VXML containing sources


Library
  build-depends:   haskell98
                   ,base
                  , HList
                  , HaXml >= 1.19
                  , filepath
                  , mtl
                  , containers
                  , template-haskell
                  , directory
  exposed-modules: Text.XML.Validated.Types
                   Text.XML.Validated.Instance.String
                   Text.XML.Validated.TH
  other-modules:  Text.XML.Validated.Util
  install-includes: include/vxmldos.h
  hs-source-dirs:  src
  extensions: CPP
  if flag(PrintGeneratedCode)
    cpp-options: -DPRINT_GENERATED_CODE
  if flag(WeakValidation)
    cpp-options: -DWEAK_VALIDATION
  else
    extensions: OverlappingInstances

executable     testSimple
  main-is:        testSimple.hs
  if !(flag(BuildTestSimple))
    buildable: False
  hs-source-dirs: test, src
  build-depends:   haskell98
                  , base
                  , HList
                  , HaXml >= 1.19
                  , filepath
                  , mtl
                  , pretty
                  , containers
                  , template-haskell
  extensions: CPP
  include-dirs: include
  if flag(WeakValidation)
    cpp-options: -DWEAK_VALIDATION
    extensions: OverlappingInstances
  else
    extensions: OverlappingInstances

executable     testXHTMTL
  main-is:        testXHTML.hs
  if !(flag(BuildTestXHTML))
    buildable: False
  hs-source-dirs: test, src
  build-depends:   haskell98
                  , base
                  , HList
                  , HaXml >= 1.19
                  , filepath
                  , mtl
                  , pretty
                  , containers
                  , template-haskell
  include-dirs: include
  extensions: CPP
  if flag(WeakValidation)
    cpp-options: -DWEAK_VALIDATION
  else
    extensions: OverlappingInstances
 

executable     run-testcases
  main-is:        run-testcases.hs
  if !(flag(BuildTestCases))
    buildable: False
  hs-source-dirs: test, src
  build-depends:   haskell98
                  , base
                  , HList
                  , HaXml >= 1.19
                  , filepath
                  , mtl
                  , pretty
                  , containers
                  , HUnit
                  , template-haskell
                  , directory
                  , process
  extensions: CPP
  if flag(WeakValidation)
    cpp-options: -DWEAK_VALIDATION
    extensions: OverlappingInstances
  else
    extensions: OverlappingInstances



executable     run-benchpress-test
  main-is:        run-benchpress-test.hs
  if !(flag(BuildBenchpressTest))
    buildable: False
  hs-source-dirs: test, src
  build-depends:   haskell98
                  , base
                  , HList
                  , HaXml >= 1.19
                  , filepath
                  , mtl
                  , pretty
                  , containers
                  , HUnit
                  , template-haskell
                  , directory
                  , process
                  , benchpress
  extensions: CPP
